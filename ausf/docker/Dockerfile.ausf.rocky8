#/*
# * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# * contributor license agreements.  See the NOTICE file distributed with
# * this work for additional information regarding copyright ownership.
# * The OpenAirInterface Software Alliance licenses this file to You under
# * the OAI Public License, Version 1.1  (the "License"); you may not use this file
# * except in compliance with the License.
# * You may obtain a copy of the License at
# *
# *      http://www.openairinterface.org/?page_id=698
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# *-------------------------------------------------------------------------------
# * For more information about the OpenAirInterface (OAI) Software Alliance:
# *      contact@openairinterface.org
# */
#---------------------------------------------------------------------
#
# Dockerfile for the Open-Air-Interface AUSF service
#   Valid for Rocky Linux 8.7+
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# BUILDER IMAGE
#---------------------------------------------------------------------

FROM docker.io/rockylinux:8 AS oai-ausf-builder

ENV IS_DOCKERFILE=1

RUN dnf install 'dnf-command(config-manager)' -y && \
    dnf config-manager --set-enabled powertools && \
    dnf install epel-release -y && crb enable && \
    dnf update -y && \
    # here just to display the current version
    cat /etc/os-release && \
    dnf install -y \
        psmisc \
        git \
        diffutils \
        libasan \
        wget \
        file && \
    echo "/usr/local/lib" > /etc/ld.so.conf.d/local-lib.conf && \
    echo "/usr/local/lib64" >> /etc/ld.so.conf.d/local-lib.conf

# Some GIT configuration command quite useful
RUN git config --global https.postBuffer 123289600 && \
    git config --global http.sslverify false

# Copying source code
WORKDIR /openair-ausf
COPY . /openair-ausf

# Installing and Building AUSF
WORKDIR /openair-ausf/build/scripts
RUN ./build_ausf --install-deps --force
RUN ./build_ausf --clean --Verbose --build-type Release --jobs && \
    ldd /openair-ausf/build/ausf/build/ausf && \
    mv /openair-ausf/build/ausf/build/ausf /openair-ausf/build/ausf/build/oai_ausf && \
    sed -i -e "s@nf-root-folder@ausf@" -e "s@nf-config-file@ausf.conf@" \
      ../common-build/docker-scripts/entrypoint.py

FROM mikefarah/yq:latest as yq-source

#---------------------------------------------------------------------
# TARGET IMAGE
#---------------------------------------------------------------------
FROM docker.io/rockylinux:8-minimal as oai-ausf
ENV TZ=Europe/Paris

# We install some debug tools for the moment in addition of mandatory libraries
RUN microdnf update -y && \
    microdnf install -y \
# Debug Tools that are not mandatory
      tzdata \
      procps-ng \
      psmisc \
      net-tools \
      iputils \
      tcpdump \
# Mandatory packages for the NF to run
#      libasan \
      libicu \
      boost \
      libevent \
      findutils \
      libconfig && \
    microdnf clean all -y && \
    rm -rf /var/cache/yum /var/cache/dnf

# Copying executable and generated libraries
WORKDIR /openair-ausf/bin
COPY --from=oai-ausf-builder \
    /openair-ausf/build/ausf/build/oai_ausf \
    /openair-ausf/scripts/healthcheck.sh \
    ./
COPY --from=yq-source /usr/bin/yq /usr/bin

COPY --from=oai-ausf-builder \
# Copying only the packages built from source
    /usr/local/lib64/libpistache.so.0 \
    /usr/local/lib/libnghttp2_asio.so \
    /usr/local/lib/libnghttp2_asio.so.1 \
    /usr/local/lib64/libspdlog.so \
    /usr/local/lib64/libfmt.so \
    /usr/local/lib64/libyaml-cpp.so.0.* \
    /usr/lib64/

RUN ldconfig && \
    ldd /openair-ausf/bin/oai_ausf

WORKDIR /openair-ausf/etc
COPY --from=oai-ausf-builder /openair-ausf/etc/ausf.conf .

COPY --from=oai-ausf-builder \
    /openair-ausf/etc/ausf.conf \
    /openair-ausf/etc/config.yaml ./

WORKDIR /openair-ausf

# expose ports
EXPOSE 80/tcp
# healthcheck
HEALTHCHECK --interval=10s \
            --timeout=15s \
            --retries=6 \
    CMD /openair-ausf/bin/healthcheck.sh

CMD ["/openair-ausf/bin/oai_ausf", "-c" , "/openair-ausf/etc/config.yaml", "-o"]
