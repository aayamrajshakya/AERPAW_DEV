/**
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service Â© 2023, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.9
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "PortManagementContainer.h"
#include "Helpers.h"

#include <sstream>

namespace oai::model::pcf {

PortManagementContainer::PortManagementContainer() {
  m_PortNum = 0;
}

void PortManagementContainer::validate() const {
  std::stringstream msg;
  if (!validate(msg)) {
    throw oai::model::common::helpers::ValidationException(msg.str());
  }
}

bool PortManagementContainer::validate(std::stringstream& msg) const {
  return validate(msg, "");
}

bool PortManagementContainer::validate(
    std::stringstream& /* msg */, const std::string& /* pathPrefix */) const {
  bool success = true;
  /*
  const std::string _pathPrefix =
      pathPrefix.empty() ? "PortManagementContainer" : pathPrefix;
  */
  return success;
}

bool PortManagementContainer::operator==(
    const PortManagementContainer& rhs) const {
  return

      (getPortManCont() == rhs.getPortManCont()) &&

      (getPortNum() == rhs.getPortNum())

          ;
}

bool PortManagementContainer::operator!=(
    const PortManagementContainer& rhs) const {
  return !(*this == rhs);
}

void to_json(nlohmann::json& j, const PortManagementContainer& o) {
  j                = nlohmann::json();
  j["portManCont"] = o.m_PortManCont;
  j["portNum"]     = o.m_PortNum;
}

void from_json(const nlohmann::json& j, PortManagementContainer& o) {
  j.at("portManCont").get_to(o.m_PortManCont);
  j.at("portNum").get_to(o.m_PortNum);
}

std::string PortManagementContainer::getPortManCont() const {
  return m_PortManCont;
}
void PortManagementContainer::setPortManCont(std::string const& value) {
  m_PortManCont = value;
}
int32_t PortManagementContainer::getPortNum() const {
  return m_PortNum;
}
void PortManagementContainer::setPortNum(int32_t const value) {
  m_PortNum = value;
}

}  // namespace oai::model::pcf
