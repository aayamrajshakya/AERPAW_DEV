/*
 * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The OpenAirInterface Software Alliance licenses this file to You under
 * the OAI Public License, Version 1.1  (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 *      http://www.openairinterface.org/?page_id=698
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *-------------------------------------------------------------------------------
 * For more information about the OpenAirInterface (OAI) Software Alliance:
 *      contact@openairinterface.org
 */

/**
 * Unified Data Repository Service API file for subscription data
 * Unified Data Repository Service (subscription data). The API version is
 * defined in 3GPP TS 29.504. Â© 2020, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AuthenticationDataDocumentApiImpl.h"
#include "logger.hpp"
#include "udr_app.hpp"

namespace oai {
namespace udr {
namespace api {

using namespace oai::udr::model;

AuthenticationDataDocumentApiImpl::AuthenticationDataDocumentApiImpl(
    const std::shared_ptr<Pistache::Rest::Router>& rtr, udr_app* udr_app_inst,
    std::string address)
    : AuthenticationDataDocumentApi(rtr),
      m_udr_app(udr_app_inst),
      m_address(address) {}
void AuthenticationDataDocumentApiImpl::create_auth_subs_data(
    const std::string& ueId,
    const AuthenticationSubscription& authenticationSubscription,
    Pistache::Http::ResponseWriter& response) {
  nlohmann::json responseData = {};
  Pistache::Http::Code code   = {};
  long httpCode               = 0;

  m_udr_app->handle_create_authentication_data(
      ueId, authenticationSubscription, responseData, httpCode);

  code = static_cast<Pistache::Http::Code>(httpCode);
  Logger::udr_server().debug("HTTP Response code %d.\n", (int) code);
  // content type
  response.headers().add<Pistache::Http::Header::ContentType>(
      Pistache::Http::Mime::MediaType("application/json"));
  response.send(code, responseData.dump().c_str());
}

void AuthenticationDataDocumentApiImpl::delete_auth_subs_data(
    const std::string& ueId, Pistache::Http::ResponseWriter& response) {
  nlohmann::json responseData = {};
  Pistache::Http::Code code   = {};
  long httpCode               = 0;

  m_udr_app->handle_delete_authentication_data(ueId, responseData, httpCode);

  code = static_cast<Pistache::Http::Code>(httpCode);
  Logger::udr_server().debug("HTTP Response code %d.\n", (int) code);
  // content type
  response.headers().add<Pistache::Http::Header::ContentType>(
      Pistache::Http::Mime::MediaType("application/json"));
  response.send(code, responseData.dump().c_str());
}

}  // namespace api
}  // namespace udr
}  // namespace oai
