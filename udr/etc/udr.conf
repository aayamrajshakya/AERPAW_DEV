################################################################################
# Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The OpenAirInterface Software Alliance licenses this file to You under
# the OAI Public License, Version 1.1  (the "License"); you may not use this file
# except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.openairinterface.org/?page_id=698
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------
# For more information about the OpenAirInterface (OAI) Software Alliance:
#      contact@openairinterface.org
################################################################################

#### This file is a jinja2 template all the values between double curly brace will be replaced with environment variables

UDR =
{
  # 0 is the default
  INSTANCE_ID   = {{ env["INSTANCE"] if "INSTANCE" in env.keys() else 0 }};
  # /var/run is the default
  PID_DIRECTORY = "{{ env["PID_DIRECTORY"] if "PID_DIRECTORY" in env.keys() else '/var/run' }}";
  UDR_NAME      = "{{ env["UDR_NAME"] }}";
  LOG_LEVEL = "{{ env["LOG_LEVEL"] if "LOG_LEVEL" in env.keys() else 'debug' }}";

  SUPPORT_FEATURES:{
    # Set to yes if UDR will relying on a DNS to resolve UDM's FQDN
    USE_FQDN_DNS = "{{ env["USE_FQDN_DNS"] if "USE_FQDN_DNS" in env.keys() else 'no' }}";
    # Set to yes if UDR resgisters to an NRF
    REGISTER_NRF = "{{ env["REGISTER_NRF"] if "REGISTER_NRF" in env.keys() else 'no' }}";
    # Set to yes to enable HTTP2 for UDR server
    USE_HTTP2    = "{{ env["USE_HTTP2"] if "USE_HTTP2" in env.keys() else 'no' }}";
    # Set to 'MySQL'/'Cassandra'/'MongoDB' to use MySQL/Cassandra/MongoDB
    DATABASE     = "MySQL";
  };

  INTERFACES:
  {
    # NUDR Interface (SBI)
    NUDR:
    {
      INTERFACE_NAME = "{{ env["UDR_INTERFACE_NAME_FOR_NUDR"] }}";
      IPV4_ADDRESS   = "read";
      # Default value: 80
      PORT           = {{ env["UDR_INTERFACE_PORT_FOR_NUDR"] if "UDR_INTERFACE_PORT_FOR_NUDR" in env.keys() else '80' }};
      HTTP2_PORT     = {{ env["UDR_INTERFACE_HTTP2_PORT_FOR_NUDR"] if "UDR_INTERFACE_HTTP2_PORT_FOR_NUDR" in env.keys() else '8080' }};
      API_VERSION    = "{{ env["UDR_API_VERSION"] if "UDR_API_VERSION" in env.keys() else 'v1' }}";
    };
  };

  NRF:
  {
    {%- if env["NRF_HOSTNAME"] is defined %}
    IPV4_ADDRESS   = "{{ resolve(env["NRF_HOSTNAME"]) }}";
    {%- else %}
    IPV4_ADDRESS = "{{ env["NRF_IPV4_ADDRESS"] if "NRF_IPV4_ADDRESS" in env.keys() else '0.0.0.0' }}";
    {%- endif %}
    # YOUR NRF CONFIG HERE (default: 80)
    PORT         = {{ env["NRF_PORT"] if "NRF_PORT" in env.keys() else '80' }};
    # YOUR NRF API VERSION HERE
    API_VERSION  = "{{ env["NRF_API_VERSION"] if "NRF_API_VERSION" in env.keys() else 'v1' }}";
    FQDN         = "{{ env["NRF_FQDN"] if "NRF_FQDN" in env.keys() else 'localhost' }}";
  };

  DB:
  {
    {%- if env["MYSQL_SERVER"] is defined %}
    DB_SERVER = "{{ env["MYSQL_SERVER"]}}";
    {%- elif env["MYSQL_IPV4_ADDRESS"] is defined %}
    DB_SERVER = "{{ env["MYSQL_IPV4_ADDRESS"]}}";
    {%- elif env["MONGO_IPV4_ADDRESS"] is defined %}
    DB_SERVER = "{{ env["MONGO_IPV4_ADDRESS"]}}";
    {%- if DATABASE == "MySQL" %}
    DB_SERVER = "mysql";
    {%- else %}
    DB_SERVER = "mongodb";
    {%- endif %}

    {%- if env["MYSQL_USER"] is defined %}
    DB_USER = "{{ env["MYSQL_USER"]}}";
    {%- elif env["MONGO_USER"] is defined %}
    DB_USER = "{{ env["MONGO_USER"]}}";
    {%- else %}
    DB_USER = "test"
    {%- endif %}

    {%- if env["MYSQL_PASS"] is defined %}
    DB_PASS = "{{ env["MYSQL_PASS"]}}";
    {%- elif env["MONGO_PASS"] is defined %}
    DB_PASS = "{{ env["MONGO_PASS"]}}";
    {%- else %}
    DB_PASS = "test"
    {%- endif %}

    {%- if env["MYSQL_DB"] is defined %}
    DB_NAME = "{{ env["MYSQL_DB"]}}";
    {%- elif env["MONGO_DB"] is defined %}
    DB_NAME= "{{ env["MONGO_DB"]}}";
    {%- if DATABASE == "MySQL" %}
    DB_SERVER = "oai_db";
    {%- else %}
    DB_SERVER = "oai_db_mongo";
    {%- endif %}

    DB_CONNECTION_TIMEOUT = {{ env["DB_CONNECTION_TIMEOUT"] if "DB_CONNECTION_TIMEOUT" in env.keys() else '300' }};
  }
};
