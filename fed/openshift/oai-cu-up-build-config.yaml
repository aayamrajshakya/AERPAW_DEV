#/*
# * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# * contributor license agreements.  See the NOTICE file distributed with
# * this work for additional information regarding copyright ownership.
# * The OpenAirInterface Software Alliance licenses this file to You under
# * the OAI Public License, Version 1.1  (the "License"); you may not use this file
# * except in compliance with the License.
# * You may obtain a copy of the License at
# *
# *      http://www.openairinterface.org/?page_id=698
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# *-------------------------------------------------------------------------------
# * For more information about the OpenAirInterface (OAI) Software Alliance:
# *      contact@openairinterface.org
# */
#---------------------------------------------------------------------
#
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
   name: oai-cu-up
spec:
  lookupPolicy:
    local: true
---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  name: oai-cu-up
spec:
  output:
    to:
      kind: ImageStreamTag
      name: "oai-cu-up:develop"
  runPolicy: Serial
  strategy:
    type: Docker
  source:
    dockerfile: |
        FROM image-registry.openshift-image-registry.svc:5000/oai-tutorial/oai-ran-base:develop AS gnb-base

        FROM image-registry.openshift-image-registry.svc:5000/oai-tutorial/oai-ran-build:develop AS gnb-build

        RUN cp /oai-ran/docker/scripts/gnb_entrypoint.sh /oai-ran/docker/scripts/entrypoint.sh

        #start from scratch for target executable
        #start from scratch for target executable
        FROM registry.access.redhat.com/ubi8/ubi:latest as oai-nr-cuup
        ENV TZ=Europe/Paris

        RUN dnf update -y && \
            dnf install -y \
                procps-ng \
                lksctp-tools \
                tzdata \
                atlas \
                net-tools \
                iputils && \
            echo "/usr/local/lib" > /etc/ld.so.conf.d/local-lib.conf && \
            echo "/usr/local/lib64" >> /etc/ld.so.conf.d/local-lib.conf

        WORKDIR /opt/oai-gnb/bin
        COPY --from=gnb-build \
            /oai-ran/cmake_targets/ran_build/build/nr-cuup \
            /oai-ran/docker/scripts/entrypoint.sh \
            ./

        COPY --from=gnb-build \
            /oai-ran/cmake_targets/ran_build/build/librfsimulator.so \
            /oai-ran/cmake_targets/ran_build/build/libparams_libconfig.so \
            /oai-ran/cmake_targets/ran_build/build/libtelnetsrv.so \
            /usr/local/lib/

        COPY --from=gnb-base \
            /lib64/libconfig.so.9 \
            /lib64/libblas.so.3 \
            /lib64/liblapack.so.3 \
            /lib64/liblapacke.so.3 \
            /lib64/

        RUN ldconfig && \
            echo "ldd on nr-cuup" && ldd /opt/oai-gnb/bin/nr-cuup && \
            echo "ldd on librfsimulator" && ldd /usr/local/lib/librfsimulator.so && \
            echo "ldd on libparams_libconfig" && ldd /usr/local/lib/libparams_libconfig.so && \
            echo "ldd on libtelnetsrv" && ldd /usr/local/lib/libtelnetsrv.so

        WORKDIR /opt/oai-gnb/etc

        WORKDIR /opt/oai-gnb

        ENTRYPOINT ["/opt/oai-gnb/bin/entrypoint.sh"]
        CMD ["/opt/oai-gnb/bin/nr-cuup", "-O", "/opt/oai-gnb/etc/gnb.conf"]