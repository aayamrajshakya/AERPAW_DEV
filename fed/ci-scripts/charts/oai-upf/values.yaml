kubernetesType: Openshift  #Vanilla for community kubernetes distribution

nfimage:
  repository: image-registry.openshift-image-registry.svc:5000/oaicicd-core/oai-upf # dockerhub oaisoftwarealliance/oai-upf
  version: UPF_TAG           #image tag, develop tag for experimental features
  # pullPolicy: IfNotPresent or Never or Always
  pullPolicy: IfNotPresent

tcpdumpimage:
  repository: support-tools
  version: 8.7-8
  #pullPolicy: IfNotPresent or Never or Always
  pullPolicy: IfNotPresent

initContainer:
  repository: docker.io/alpine/curl
  version: 3.14
  #pullPolicy: IfNotPresent or Never or Always
  pullPolicy: IfNotPresent

## good to use when pulling images from docker-hub
#imagePullSecrets:
#  - name: "regcred"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "oai-upf"

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

securityContext:
  privileged: true

#service type is fixed to clusterIP, it is only support for non multus interface (eth0)

service:
  pfcpPort: 8805 # default port no need to change unless necessary
  gtpuPort: 2152 # default port no need to change unless necessary

# Just for debugging
start:
  upf: true
  tcpdump: true

# create an extra interface for N3 incase the gNB is outside the cluster network or there is a need to have dedicated interface for N3
multus:
  create: true
  n3Ip: "172.21.6.201"
  n3Netmask: "22"
  n6Gw: "172.21.7.254"
  hostInterface: "bond0"

config:
  fqdn: "oai-upf"
  n3If: "net1"  # net1 if gNB is outside the cluster network and multus creation is true else eth0
  n4If: "eth0" # use for SMF communication
  n6If: "net1"  # net1 if gNB is outside the cluster network and multus creation is true else eth0 (important because it sends the traffic towards internet)
  threadsN3Ul: "1"
  threadsN6Dl: "1"
  threadsN6Prio: 99
  threadsN3Prio: 98
  threadsN4Prio: 88
  netUeNatOption: "yes"
  bypassUlPfcpRules: "no" #standart feature is no, put yes if you want less UL packet delay
  smfIpAdd: "127.0.0.1" # SMF ip-address incase NRF is not used to initiate a PFCP session
  netUeIp1: "12.1.1.0/24"  # The range in which UE ip-address will be allocated should be configured the same in SMF
  ## Optional (set for ims dnn)
  #netUeIp2: "12.2.1.0/24"  # The range in which UE ip-address will be allocated should be configured the same in SMF
  registerNRF: "yes"
  useFqdnNrf: "yes"  # use FQDN to resolve nrf ip-address
  nrfFqdn: "oai-nrf" # make sure this can be resolved by container dns
  #Mandatory to configure atlease one slice
  nssaiSst0: 1 # should match with SMF information
  nssaiSd0: "0xFFFFFF"  # should match with SMF information (Optional, if removed sd value will be 0xFFFFFF)
  dnn0: "oai" # should match with SMF information
  #Upto 4 slices can be added from here to add more you need to add manullay in config.yaml. Please follow the same way of adding slices nssaiSST$,nssaiSd$,dnn$ ($=0,1,2,3)
  nssaiSst1: 1 # should match with SMF information (Optional, if removed slice will not be configured)
  nssaiSd1: "0xFFFFFF"  # should match with SMF information (Optional, if removed sd value will be 0xFFFFFF only if nssaiSst1 is configured)
  dnn1: "ims" # should match with SMF information
  logLevel: "debug"

## currently only used by tcpdump container to store the tcpdump, this volume will be shared between all the network functions
persistent:
  sharedvolume: true  # should be true when if wants to store the tcpdump of all the network functions at same place
  volumneName: nfs-client
  size: 1Gi


resources:
  define: false
  limits:
    tcpdump:
      cpu: 100m
      memory: 128Mi
    nf:
      cpu: 100m
      memory: 128Mi
  requests:
    tcpdump:
      cpu: 100m
      memory: 128Mi
    nf:
      cpu: 100m
      memory: 128Mi

readinessProbe: true

livenessProbe: false

terminationGracePeriodSeconds: 5

nodeSelector: {}

nodeName: perse
