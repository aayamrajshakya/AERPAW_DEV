/**
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service Â© 2023, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.9
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * UpPathChgEvent.h
 *
 *
 */

#ifndef UpPathChgEvent_H_
#define UpPathChgEvent_H_

#include "DnaiChangeType.h"
#include <string>
#include <nlohmann/json.hpp>

namespace oai::model::pcf {

/// <summary>
///
/// </summary>
class UpPathChgEvent {
 public:
  UpPathChgEvent();
  virtual ~UpPathChgEvent() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const UpPathChgEvent& rhs) const;
  bool operator!=(const UpPathChgEvent& rhs) const;

  /////////////////////////////////////////////
  /// UpPathChgEvent members

  /// <summary>
  ///
  /// </summary>
  std::string getNotificationUri() const;
  void setNotificationUri(std::string const& value);
  /// <summary>
  /// It is used to set the value of Notification Correlation ID in the
  /// notification sent by the SMF.
  /// </summary>
  std::string getNotifCorreId() const;
  void setNotifCorreId(std::string const& value);
  /// <summary>
  ///
  /// </summary>
  oai::model::common::DnaiChangeType getDnaiChgType() const;
  void setDnaiChgType(oai::model::common::DnaiChangeType const& value);
  /// <summary>
  ///
  /// </summary>
  bool isAfAckInd() const;
  void setAfAckInd(bool const value);
  bool afAckIndIsSet() const;
  void unsetAfAckInd();

  friend void to_json(nlohmann::json& j, const UpPathChgEvent& o);
  friend void from_json(const nlohmann::json& j, UpPathChgEvent& o);

 protected:
  std::string m_NotificationUri;

  std::string m_NotifCorreId;

  oai::model::common::DnaiChangeType m_DnaiChgType;

  bool m_AfAckInd;
  bool m_AfAckIndIsSet;
};

}  // namespace oai::model::pcf

#endif /* UpPathChgEvent_H_ */
