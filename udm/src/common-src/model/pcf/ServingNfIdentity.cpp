/**
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service Â© 2023, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.9
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ServingNfIdentity.h"
#include "Helpers.h"

#include <sstream>

namespace oai::model::pcf {

ServingNfIdentity::ServingNfIdentity() {
  m_ServNfInstId      = "";
  m_ServNfInstIdIsSet = false;
  m_GuamiIsSet        = false;
  m_AnGwAddrIsSet     = false;
}

void ServingNfIdentity::validate() const {
  std::stringstream msg;
  if (!validate(msg)) {
    throw oai::model::common::helpers::ValidationException(msg.str());
  }
}

bool ServingNfIdentity::validate(std::stringstream& msg) const {
  return validate(msg, "");
}

bool ServingNfIdentity::validate(
    std::stringstream& /* msg */, const std::string& /* pathPrefix */) const {
  bool success = true;
  /*
  const std::string _pathPrefix =
      pathPrefix.empty() ? "ServingNfIdentity" : pathPrefix;
  */
  return success;
}

bool ServingNfIdentity::operator==(const ServingNfIdentity& rhs) const {
  return

      ((!servNfInstIdIsSet() && !rhs.servNfInstIdIsSet()) ||
       (servNfInstIdIsSet() && rhs.servNfInstIdIsSet() &&
        getServNfInstId() == rhs.getServNfInstId())) &&

      ((!guamiIsSet() && !rhs.guamiIsSet()) ||
       (guamiIsSet() && rhs.guamiIsSet() && getGuami() == rhs.getGuami())) &&

      ((!anGwAddrIsSet() && !rhs.anGwAddrIsSet()) ||
       (anGwAddrIsSet() && rhs.anGwAddrIsSet() &&
        getAnGwAddr() == rhs.getAnGwAddr()))

          ;
}

bool ServingNfIdentity::operator!=(const ServingNfIdentity& rhs) const {
  return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ServingNfIdentity& o) {
  j = nlohmann::json();
  if (o.servNfInstIdIsSet()) j["servNfInstId"] = o.m_ServNfInstId;
  if (o.guamiIsSet()) j["guami"] = o.m_Guami;
  if (o.anGwAddrIsSet()) j["anGwAddr"] = o.m_AnGwAddr;
}

void from_json(const nlohmann::json& j, ServingNfIdentity& o) {
  if (j.find("servNfInstId") != j.end()) {
    j.at("servNfInstId").get_to(o.m_ServNfInstId);
    o.m_ServNfInstIdIsSet = true;
  }
  if (j.find("guami") != j.end()) {
    j.at("guami").get_to(o.m_Guami);
    o.m_GuamiIsSet = true;
  }
  if (j.find("anGwAddr") != j.end()) {
    j.at("anGwAddr").get_to(o.m_AnGwAddr);
    o.m_AnGwAddrIsSet = true;
  }
}

std::string ServingNfIdentity::getServNfInstId() const {
  return m_ServNfInstId;
}
void ServingNfIdentity::setServNfInstId(std::string const& value) {
  m_ServNfInstId      = value;
  m_ServNfInstIdIsSet = true;
}
bool ServingNfIdentity::servNfInstIdIsSet() const {
  return m_ServNfInstIdIsSet;
}
void ServingNfIdentity::unsetServNfInstId() {
  m_ServNfInstIdIsSet = false;
}
oai::model::common::Guami ServingNfIdentity::getGuami() const {
  return m_Guami;
}
void ServingNfIdentity::setGuami(oai::model::common::Guami const& value) {
  m_Guami      = value;
  m_GuamiIsSet = true;
}
bool ServingNfIdentity::guamiIsSet() const {
  return m_GuamiIsSet;
}
void ServingNfIdentity::unsetGuami() {
  m_GuamiIsSet = false;
}
oai::model::pcf::AnGwAddress ServingNfIdentity::getAnGwAddr() const {
  return m_AnGwAddr;
}
void ServingNfIdentity::setAnGwAddr(oai::model::pcf::AnGwAddress const& value) {
  m_AnGwAddr      = value;
  m_AnGwAddrIsSet = true;
}
bool ServingNfIdentity::anGwAddrIsSet() const {
  return m_AnGwAddrIsSet;
}
void ServingNfIdentity::unsetAnGwAddr() {
  m_AnGwAddrIsSet = false;
}

}  // namespace oai::model::pcf
