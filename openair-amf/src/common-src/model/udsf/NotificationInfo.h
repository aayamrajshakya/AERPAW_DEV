/**
 * Nudsf_DataRepository
 * Nudsf Data Repository Service.   Â© 2022, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NotificationInfo.h
 *
 *
 */

#ifndef NotificationInfo_H_
#define NotificationInfo_H_

#include "NotificationSubscription.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace oai::model::udsf {

/// <summary>
///
/// </summary>
class NotificationInfo {
 public:
  NotificationInfo();
  virtual ~NotificationInfo() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const NotificationInfo& rhs) const;
  bool operator!=(const NotificationInfo& rhs) const;

  /////////////////////////////////////////////
  /// NotificationInfo members

  /// <summary>
  ///
  /// </summary>
  std::vector<oai::model::udsf::NotificationSubscription>
  getExpiredSubscriptions() const;
  void setExpiredSubscriptions(
      std::vector<oai::model::udsf::NotificationSubscription> const& value);

  friend void to_json(nlohmann::json& j, const NotificationInfo& o);
  friend void from_json(const nlohmann::json& j, NotificationInfo& o);

 protected:
  std::vector<oai::model::udsf::NotificationSubscription>
      m_ExpiredSubscriptions;
};

}  // namespace oai::model::udsf

#endif /* NotificationInfo_H_ */
