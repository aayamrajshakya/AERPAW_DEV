/**
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service Â© 2023, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.9
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ChargingInformation.h
 *
 *
 */

#ifndef ChargingInformation_H_
#define ChargingInformation_H_

#include <string>
#include <nlohmann/json.hpp>

namespace oai::model::pcf {

/// <summary>
///
/// </summary>
class ChargingInformation {
 public:
  ChargingInformation();
  virtual ~ChargingInformation() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const ChargingInformation& rhs) const;
  bool operator!=(const ChargingInformation& rhs) const;

  /////////////////////////////////////////////
  /// ChargingInformation members

  /// <summary>
  ///
  /// </summary>
  std::string getPrimaryChfAddress() const;
  void setPrimaryChfAddress(std::string const& value);
  /// <summary>
  ///
  /// </summary>
  std::string getSecondaryChfAddress() const;
  void setSecondaryChfAddress(std::string const& value);
  /// <summary>
  ///
  /// </summary>
  std::string getPrimaryChfSetId() const;
  void setPrimaryChfSetId(std::string const& value);
  bool primaryChfSetIdIsSet() const;
  void unsetPrimaryChfSetId();
  /// <summary>
  ///
  /// </summary>
  std::string getPrimaryChfInstanceId() const;
  void setPrimaryChfInstanceId(std::string const& value);
  bool primaryChfInstanceIdIsSet() const;
  void unsetPrimaryChfInstanceId();
  /// <summary>
  ///
  /// </summary>
  std::string getSecondaryChfSetId() const;
  void setSecondaryChfSetId(std::string const& value);
  bool secondaryChfSetIdIsSet() const;
  void unsetSecondaryChfSetId();
  /// <summary>
  ///
  /// </summary>
  std::string getSecondaryChfInstanceId() const;
  void setSecondaryChfInstanceId(std::string const& value);
  bool secondaryChfInstanceIdIsSet() const;
  void unsetSecondaryChfInstanceId();

  friend void to_json(nlohmann::json& j, const ChargingInformation& o);
  friend void from_json(const nlohmann::json& j, ChargingInformation& o);

 protected:
  std::string m_PrimaryChfAddress;

  std::string m_SecondaryChfAddress;

  std::string m_PrimaryChfSetId;
  bool m_PrimaryChfSetIdIsSet;
  std::string m_PrimaryChfInstanceId;
  bool m_PrimaryChfInstanceIdIsSet;
  std::string m_SecondaryChfSetId;
  bool m_SecondaryChfSetIdIsSet;
  std::string m_SecondaryChfInstanceId;
  bool m_SecondaryChfInstanceIdIsSet;
};

}  // namespace oai::model::pcf

#endif /* ChargingInformation_H_ */
