/**
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service Â© 2023, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.9
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * UeInitiatedResourceRequest.h
 *
 *
 */

#ifndef UeInitiatedResourceRequest_H_
#define UeInitiatedResourceRequest_H_

#include "PacketFilterInfo.h"
#include "RuleOperation.h"
#include <string>
#include <vector>
#include "RequestedQos.h"
#include <nlohmann/json.hpp>

namespace oai::model::pcf {

/// <summary>
///
/// </summary>
class UeInitiatedResourceRequest {
 public:
  UeInitiatedResourceRequest();
  virtual ~UeInitiatedResourceRequest() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const UeInitiatedResourceRequest& rhs) const;
  bool operator!=(const UeInitiatedResourceRequest& rhs) const;

  /////////////////////////////////////////////
  /// UeInitiatedResourceRequest members

  /// <summary>
  ///
  /// </summary>
  std::string getPccRuleId() const;
  void setPccRuleId(std::string const& value);
  bool pccRuleIdIsSet() const;
  void unsetPccRuleId();
  /// <summary>
  ///
  /// </summary>
  oai::model::pcf::RuleOperation getRuleOp() const;
  void setRuleOp(oai::model::pcf::RuleOperation const& value);
  /// <summary>
  ///
  /// </summary>
  int32_t getPrecedence() const;
  void setPrecedence(int32_t const value);
  bool precedenceIsSet() const;
  void unsetPrecedence();
  /// <summary>
  ///
  /// </summary>
  std::vector<oai::model::pcf::PacketFilterInfo> getPackFiltInfo() const;
  void setPackFiltInfo(
      std::vector<oai::model::pcf::PacketFilterInfo> const& value);
  /// <summary>
  ///
  /// </summary>
  oai::model::pcf::RequestedQos getReqQos() const;
  void setReqQos(oai::model::pcf::RequestedQos const& value);
  bool reqQosIsSet() const;
  void unsetReqQos();

  friend void to_json(nlohmann::json& j, const UeInitiatedResourceRequest& o);
  friend void from_json(const nlohmann::json& j, UeInitiatedResourceRequest& o);

 protected:
  std::string m_PccRuleId;
  bool m_PccRuleIdIsSet;
  oai::model::pcf::RuleOperation m_RuleOp;

  int32_t m_Precedence;
  bool m_PrecedenceIsSet;
  std::vector<oai::model::pcf::PacketFilterInfo> m_PackFiltInfo;

  oai::model::pcf::RequestedQos m_ReqQos;
  bool m_ReqQosIsSet;
};

}  // namespace oai::model::pcf

#endif /* UeInitiatedResourceRequest_H_ */
