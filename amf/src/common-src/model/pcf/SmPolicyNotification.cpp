/**
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service Â© 2023, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.9
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "SmPolicyNotification.h"
#include "Helpers.h"

#include <sstream>

namespace oai::model::pcf {

SmPolicyNotification::SmPolicyNotification() {
  m_ResourceUri           = "";
  m_ResourceUriIsSet      = false;
  m_SmPolicyDecisionIsSet = false;
}

void SmPolicyNotification::validate() const {
  std::stringstream msg;
  if (!validate(msg)) {
    throw oai::model::common::helpers::ValidationException(msg.str());
  }
}

bool SmPolicyNotification::validate(std::stringstream& msg) const {
  return validate(msg, "");
}

bool SmPolicyNotification::validate(
    std::stringstream& /* msg */, const std::string& /* pathPrefix */) const {
  bool success = true;
  /*
  const std::string _pathPrefix =
      pathPrefix.empty() ? "SmPolicyNotification" : pathPrefix;
  */
  return success;
}

bool SmPolicyNotification::operator==(const SmPolicyNotification& rhs) const {
  return

      ((!resourceUriIsSet() && !rhs.resourceUriIsSet()) ||
       (resourceUriIsSet() && rhs.resourceUriIsSet() &&
        getResourceUri() == rhs.getResourceUri())) &&

      ((!smPolicyDecisionIsSet() && !rhs.smPolicyDecisionIsSet()) ||
       (smPolicyDecisionIsSet() && rhs.smPolicyDecisionIsSet() &&
        getSmPolicyDecision() == rhs.getSmPolicyDecision()))

          ;
}

bool SmPolicyNotification::operator!=(const SmPolicyNotification& rhs) const {
  return !(*this == rhs);
}

void to_json(nlohmann::json& j, const SmPolicyNotification& o) {
  j = nlohmann::json();
  if (o.resourceUriIsSet()) j["resourceUri"] = o.m_ResourceUri;
  if (o.smPolicyDecisionIsSet()) j["smPolicyDecision"] = o.m_SmPolicyDecision;
}

void from_json(const nlohmann::json& j, SmPolicyNotification& o) {
  if (j.find("resourceUri") != j.end()) {
    j.at("resourceUri").get_to(o.m_ResourceUri);
    o.m_ResourceUriIsSet = true;
  }
  if (j.find("smPolicyDecision") != j.end()) {
    j.at("smPolicyDecision").get_to(o.m_SmPolicyDecision);
    o.m_SmPolicyDecisionIsSet = true;
  }
}

std::string SmPolicyNotification::getResourceUri() const {
  return m_ResourceUri;
}
void SmPolicyNotification::setResourceUri(std::string const& value) {
  m_ResourceUri      = value;
  m_ResourceUriIsSet = true;
}
bool SmPolicyNotification::resourceUriIsSet() const {
  return m_ResourceUriIsSet;
}
void SmPolicyNotification::unsetResourceUri() {
  m_ResourceUriIsSet = false;
}
oai::model::pcf::SmPolicyDecision SmPolicyNotification::getSmPolicyDecision()
    const {
  return m_SmPolicyDecision;
}
void SmPolicyNotification::setSmPolicyDecision(
    oai::model::pcf::SmPolicyDecision const& value) {
  m_SmPolicyDecision      = value;
  m_SmPolicyDecisionIsSet = true;
}
bool SmPolicyNotification::smPolicyDecisionIsSet() const {
  return m_SmPolicyDecisionIsSet;
}
void SmPolicyNotification::unsetSmPolicyDecision() {
  m_SmPolicyDecisionIsSet = false;
}

}  // namespace oai::model::pcf
