/**
 * Nudsf_DataRepository
 * Nudsf Data Repository Service.   Â© 2022, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * Record.h
 *
 * Definition of a Record
 */

#ifndef Record_H_
#define Record_H_

#include <nlohmann/json.hpp>
#include "RecordMeta.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace oai::model::udsf {

/// <summary>
/// Definition of a Record
/// </summary>
class Record {
 public:
  Record();
  virtual ~Record() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const Record& rhs) const;
  bool operator!=(const Record& rhs) const;

  /////////////////////////////////////////////
  /// Record members

  /// <summary>
  ///
  /// </summary>
  oai::model::udsf::RecordMeta getMeta() const;
  void setMeta(oai::model::udsf::RecordMeta const& value);
  /// <summary>
  /// list of opaque Block&#39;s in this Record
  /// </summary>
  std::vector<nlohmann::json> getBlocks() const;
  void setBlocks(std::vector<nlohmann::json> const& value);
  bool blocksIsSet() const;
  void unsetBlocks();

  friend void to_json(nlohmann::json& j, const Record& o);
  friend void from_json(const nlohmann::json& j, Record& o);

 protected:
  oai::model::udsf::RecordMeta m_Meta;

  std::vector<nlohmann::json> m_Blocks;
  bool m_BlocksIsSet;
};

}  // namespace oai::model::udsf

#endif /* Record_H_ */
